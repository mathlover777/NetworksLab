
REPORT
______________________________________________________________________________

NAME   : Sourav Sarkar
ROLLNO : 11CS30037
______________________________________________________________________________

Assignment 2
______________________________________________________________________________


INPUTS

Characteristics of each source signal taken input from the user:-

1. The lower limit of frequency (a)
2. The upper limit of frequency (b)
3. The maximum amplitude (ampMax)
4. The frequency to which it is to be shifted (f1 and f2)
5. The number of sinusoids (n1 and n2)

Other miscellaneous inputs:-

1. Signal Duration (t)
2. Sampling Frequency (fSample)
3. Transmission Bandwidth (band)
4. Max Error (eMax)
______________________________________________________________________________

PROCEDURE


PART 1

1. createSignal() function is used to create the two signals.It sets amplitudes and frequencies for various signals.

2. Then the sample() function is used to sample them at the given frequency.The sampling frequency is chosen sufficiently large (>2*maximum frequency) to capture all the frequency components properly.

3. The ensureSameSize() function ensures the number of sampling points are same in both signals such that the later codes that require both signals to be of same size for consistency does not fail.

4. The padWithZero() function pads the sample with input file with 0 values at the end so that the sample count becomes equal to a power of two.As the FFT algorithm we have implemented halves the given sample which requires the signal to be always even(thats why power of 2) unless its the base case(ie of size 1).

5. We then take DFT of the two signals through the FFT() function.Here we have used the Cooleyâ€“Tukey algorithm which computes DFT of an N-point signal in O(NlogN) time using a simple divide and conquer approach.

6. The shift() function shifts it to two separate bands.

7. The bands are wide apart so that they do not overlap with each other.

8. The merge() function then combines these two signals into one signal.

9. The reflect() function 'reflects' this merged signal about the centre point such that the second half of the signal is a complex conjugate of the first part.This ensures that while we do IDFT we will always get real signal.

10. Now the IDFT is computed with the IFFT algorithm.This alorithm uses the FFT agorithm[O(nlogn)].
It just calls the FFT function on the given sequence(of size N).Now it fixes the 1st and N/2th element and swaps a[i] with a[N-i].Now all the numbers are divided by N and and hence IDFT is done with IFFT algorithm.

11. At the receiver's end another FFT is used to get back the signal.

12. The separate bands() function generates two different signals by filtering it out based on given frequencies.
13. The inv_shift() function essentially performs a reverse of the shift operation to retrieve the original frequency bands.
14. The reflect() function is again used to 'reflect' it about the centre point to ensure we get real signal while doing IDFT.
15. Finally individual IFFTs are done to get back the original signals.

16. Also the Errors of each signal are computed and plotted for different mid-frequency separation

PART 2

The only difference in this part is that an error is introduced in the signal just before it is transmitted.The error is adjusted by input.

PART 3

In this part the signal is quantized before transmission.The signal is again requantized at the receiver's.We have quantized the signal within shanon's limit so that we get nice reconstruction at the receiving end.As this part takes lots of time to execute we have taken l as input and can be varied and the error in each signal is reported in each case.

Also The experiment is repeated for various l values.


EXPERIMENT RESULTS :

sourav@ubuntu:~/networks/ASG2$ ./asg2 
***************************************
***************************************
***************************************
******************PART1****************
***************************************

Enter 1 to Execute Part 1 :1
***************************************

FOR SOURCE 1(U1) ********************
Enter f1 : 100000
Enter ampMax1 : 20
Enter n1 : 20

FOR SOURCE 2(U2) ********************
Enter f2 : 120000
Enter ampMax2 : 20
Enter n2 : 20
***************************************
Enter fMin : 0
Enter fMax : 3500
***************************************

Enter Signal Duration : .01

Enter Sampling Frequency : 400000
***************************************
***************************************
*****************OUTPUT****************
***************************************

SIGNAL 1 : 
FREQ = 2940.6570100415 AMP = 7.8876585364
FREQ = 2740.8472831551 AMP = 15.9688006695
FREQ = 3190.7657527787 AMP = 3.9510273859
FREQ = 1173.2796450021 AMP = 15.3645918962
FREQ = 972.2114878112 AMP = 11.0793991159
FREQ = 1670.8896815176 AMP = 12.5774184952
FREQ = 1276.7456547715 AMP = 10.2680182039
FREQ = 3332.8040381115 AMP = 18.3239013601
FREQ = 2224.9910478597 AMP = 14.3459385887
FREQ = 495.6089437453 AMP = 12.1393775251
FREQ = 57.0520006852 AMP = 4.8577354126
FREQ = 480.3105187511 AMP = 16.0835350845
FREQ = 548.3768123893 AMP = 8.0188878849
FREQ = 454.2665637351 AMP = 2.1761760405
FREQ = 3496.2358130125 AMP = 4.3651381062
FREQ = 1795.2633804154 AMP = 16.7822446939
FREQ = 2144.2394140848 AMP = 5.9206323539
FREQ = 2231.4329369606 AMP = 10.4857438013
FREQ = 1727.5404544675 AMP = 19.4555004777
FREQ = 1023.8087454456 AMP = 15.4271539559
SIGNAL 2 : 
FREQ = 1843.6074272467 AMP = 15.3982767255
FREQ = 1400.8001773156 AMP = 17.8305890401
FREQ = 991.6016110180 AMP = 7.0491669453
FREQ = 2827.0358200311 AMP = 18.3805294793
FREQ = 244.1434668117 AMP = 18.9865415073
FREQ = 1840.9837257774 AMP = 1.7211169571
FREQ = 672.7484609805 AMP = 13.2645385402
FREQ = 3115.8141089211 AMP = 6.9778587050
FREQ = 224.5996227602 AMP = 0.4004609773
FREQ = 1601.9560804600 AMP = 1.2619167665
FREQ = 833.9798396146 AMP = 19.4126826336
FREQ = 3157.7282571968 AMP = 17.0183957354
FREQ = 933.3301228161 AMP = 10.7952068144
FREQ = 1313.2244173033 AMP = 15.2049747273
FREQ = 1793.8737744903 AMP = 13.3544752157
FREQ = 1860.6225195623 AMP = 0.7856068671
FREQ = 1531.7315880823 AMP = 18.6367011250
FREQ = 3257.8342837551 AMP = 14.4190468613
FREQ = 995.0269106752 AMP = 14.7706862980
FREQ = 2239.9258579779 AMP = 7.0809735950
Mean Square error in Source 1 Signal = 5.3395133016 in Source 2 Signal = 4.1460640542
Enter 1 to do EXPERIMENTATION ON F1-F2 Separation : 1

Enter number of Separations : 100

Error1 = 43.185722	Error2 = 41.154306
.....................................
Error1 = 5.339513	Error2 = 4.146064
***************************************
***************************************
***************************************
******************PART2****************
***************************************

Enter 1 to Execute Part 2 :1
***************************************

FOR SOURCE 1(U1) ********************
Enter f1 : 100000
Enter ampMax1 : 10
Enter n1 : 10

FOR SOURCE 2(U2) ********************
Enter f2 : 200000
Enter ampMax2 : 10
Enter n2 : 10
***************************************
Enter fMin : 0
Enter fMax : 3500
***************************************

Enter Signal Duration : .01

Enter Sampling Frequency : 500000
***************************************
***************************************
*****************OUTPUT****************
***************************************

SIGNAL 1 : 
FREQ = 2407.5148659328 AMP = 1.6597416632
FREQ = 1540.3658466136 AMP = 8.8007523626
FREQ = 2902.2038266539 AMP = 3.3033712969
FREQ = 801.3885986532 AMP = 8.9337241458
FREQ = 1226.2606249313 AMP = 6.8666990832
FREQ = 3347.6388851868 AMP = 5.8864013319
FREQ = 2300.5641383587 AMP = 8.5867632593
FREQ = 1538.4597182453 AMP = 9.2396978891
FREQ = 1394.5283332814 AMP = 8.1476689634
FREQ = 2394.7648384584 AMP = 9.1097203079
SIGNAL 2 : 
FREQ = 1688.7172982975 AMP = 2.1582495897
FREQ = 3325.8833095086 AMP = 9.2012825372
FREQ = 516.8100516390 AMP = 8.8106216950
FREQ = 2243.7820871099 AMP = 4.3195341827
FREQ = 2168.5876937902 AMP = 2.8105941242
FREQ = 2751.0073430608 AMP = 3.0745787374
FREQ = 1564.6175272132 AMP = 2.2610662516
FREQ = 656.3658833766 AMP = 2.7623467207
FREQ = 1947.5531435793 AMP = 4.1650128058
FREQ = 593.6248016514 AMP = 9.0680393386
Mean Square error in Source 1 Signal = 1.4349850447 in Source 2 Signal = 1.7491158090
***************************************
***************************************
***************************************
******************PART3****************
***************************************

Enter 1 to Execute Part 3 :1
***************************************

FOR SOURCE 1(U1) ********************
Enter f1 : 100000
Enter ampMax1 : 20
Enter n1 : 20

FOR SOURCE 2(U2) ********************
Enter f2 : 200000
Enter ampMax2 : 20
Enter n2 : 20
***************************************
Enter fMin : 0
Enter fMax : 3500
***************************************

Enter Signal Duration : .01

Enter Sampling Frequency : 500000
***************************************
***************************************
*****************OUTPUT****************
***************************************

SIGNAL 1 : 
FREQ = 1118.4038231701 AMP = 0.7458318773
FREQ = 2318.7422288203 AMP = 18.1056205640
FREQ = 2407.5813167298 AMP = 12.2222108730
FREQ = 407.1516969275 AMP = 12.0349479895
FREQ = 1913.5015497047 AMP = 11.3864364342
FREQ = 46.6167303019 AMP = 19.6307029853
FREQ = 2111.2419891224 AMP = 19.8347128741
FREQ = 992.2225931623 AMP = 0.4214438705
FREQ = 523.5706656350 AMP = 0.3891068606
FREQ = 2628.6789815075 AMP = 10.5428825927
FREQ = 411.9064721334 AMP = 4.3250155935
FREQ = 1085.7237833951 AMP = 9.9442310212
FREQ = 1867.0841685343 AMP = 13.4682471368
FREQ = 3193.4927616704 AMP = 17.4608787789
FREQ = 2724.2380521373 AMP = 4.3528060356
FREQ = 605.6652779717 AMP = 1.9579535732
FREQ = 892.2616363933 AMP = 16.7109000481
FREQ = 11.1254723794 AMP = 18.8562454464
FREQ = 1563.2944095709 AMP = 2.3901552625
FREQ = 1905.9588496601 AMP = 19.8674054816
SIGNAL 2 : 
FREQ = 2410.9035469177 AMP = 11.1575747520
FREQ = 3412.1689800695 AMP = 5.8408316252
FREQ = 1923.6503329238 AMP = 5.1679518377
FREQ = 1095.8982117455 AMP = 13.9841199918
FREQ = 972.4852738308 AMP = 1.2832982472
FREQ = 792.2254506462 AMP = 7.9108099769
FREQ = 981.4549221105 AMP = 10.7311384802
FREQ = 3124.6321763027 AMP = 16.2773662323
FREQ = 734.8924829787 AMP = 16.1035710648
FREQ = 2404.1928753276 AMP = 19.7664602007
FREQ = 79.8659909423 AMP = 17.1991894474
FREQ = 301.7724087936 AMP = 5.5550150133
FREQ = 2434.2656600914 AMP = 1.7879879017
FREQ = 771.9705804586 AMP = 2.8432003888
FREQ = 731.1750537395 AMP = 15.3024538864
FREQ = 474.3560256783 AMP = 17.9547348609
FREQ = 1130.5050100808 AMP = 2.2087143092
FREQ = 664.2241350674 AMP = 17.4523162457
FREQ = 1290.9165773498 AMP = 10.0578419818
FREQ = 2001.3763415634 AMP = 12.9337248639
Optimised Level Set = 50

Mean Square error in Source 1 Signal = 3.6621835642 in Source 2 Signal = 2.7671144669
Enter 1 for EXPERIMENTATION ON QUANTIZATION LEVELS : 1

Enter Min Quantization Level : 5

Enter Max Quantization Level : 100

Enter Number of trials : 100

L = 5 Error 1 = 25.531972	Error 2 = 23.317771
..............................................
L = 100 Error 1 = 3.662184	Error 2 = 2.767114

Link To Plots :

https://drive.google.com/file/d/0B9bJyZCySAkYMURLek8yLXhpb1E/edit?usp=sharing

Deduction:
In part 1 when the mid-frequency separation is more than their bandwidth then perfect reconstruction is almost possible
In Part 2 we have introduced error and results also have error in them
In part 3 we have used quantization so errors are removed at that cost.We have also varied the quantization levels and found that after beyond a certain level the error in output has saturated at a relatively low value

From the results it seems that they are as expected.

Optimisation :

1 > We have implemented FFT and IFFT with Cooleyâ€“Tukey Algorithm that uses O(nlogn) complexity which is the best known lower bound on FFT till date.

2 > We have used extensive file management as we allocate memory in functions,read data from file and write output again to file.This takes much time to compute if we have used full memory but it enables us to implement the expreiment in old systems too.

3> While combining/shifting the signals in Frequency Domain , We have ignored the right have as its the conjugate of the left part.So to avoid unnecessary computations we have done it just before doing IFFT
